# code: language=ansible
---
- name: Install nginx
  when: install_nginx == 'true'
  community.general.zypper:
    name:
      - nginx
    state: present
    update_cache: true

- name: Create the SSL certificate and key
  ansible.builtin.copy:
    content: "{{ item.content }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "0644"
  loop:
    - content: "{{ nginx_ssl_cert }}"
      dest: "/etc/ssl/certs/trento.crt"
    - content: "{{ nginx_ssl_key }}"
      dest: "/etc/ssl/private/trento.key"

- name: Override default nginx config
  when: override_nginx_default_conf == 'true'
  ansible.builtin.template:
    src: "nginx-default.conf.j2"
    dest: "{{ nginx_conf_base_dir }}/nginx.conf"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: "0644"
  vars:
    conf_folder: "{{ nginx_conf_dir }}"
    vhost_folder: "{{ nginx_vhost_dir }}"
  notify:
    - Restart nginx

- name: Configure web project
  ansible.builtin.template:
    src: "trento.conf.j2"
    dest: "{{ nginx_conf_base_dir }}/{{ nginx_vhost_dir }}/{{ nginx_vhost_filename }}.conf"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: "0644"
  vars:
    server_name: "{{ trento_server_name }}"
    wanda_port: "{{ wanda_container_port }}"
    web_port: "{{ web_container_port }}"
    http_listen_port: "{{ nginx_vhost_http_listen_port }}"
    https_listen_port: "{{ nginx_vhost_https_listen_port }}"
    wanda_upstream: "{{ wanda_upstream_name }}"
    web_upstream: "{{ web_upstream_name }}"
  notify:
    - Restart nginx

- name: Start nginx service
  ansible.builtin.service:
    name: "{{ nginx_service }}"
    state: started
    enabled: true

- name: Check the status of firewalld
  ansible.builtin.systemd:
    name: firewalld.service
  register: firewalld_status

- name: Open HTTP and HTTPS ports in firewalld
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: true
    offline: true
  loop:
    - "{{ nginx_vhost_http_listen_port }}/tcp"
    - "{{ nginx_vhost_https_listen_port }}/tcp"
  when: firewalld_status.status.ActiveState == "active"
