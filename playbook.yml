# code: language=ansible
---
- name: Install thirdparties
  hosts: trento-server
  become: true
  pre_tasks:
    - name: Check SLES distribution and version
      ansible.builtin.fail:
        msg: "This playbook only runs on SLES for SAP 15 SP3 or above. Detected: {{ ansible_distribution }} {{ ansible_distribution_version }}"
      when: >
        ((ansible_distribution != "SLES_SAP") and
        (ansible_distribution != "openSUSE Leap")) or
        (ansible_distribution_version is version('15.3', '<'))

  tasks:
    - name: Install installation prerequisites
      community.general.zypper:
        name:
          - gcc
          - python3-devel
          - sudo

    - name: Install python prerequisites
      community.general.zypper:
        name:
          - python3-setuptools
          - python3-pip
          - python3-pexpect
        state: present
        update_cache: true

    - name: Install docker
      community.general.zypper:
        name: docker
        state: present
        update_cache: true

    - name: Start docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

- name: Check firewalld package on prometheus and trento-server hosts
  hosts: prometheus-hosts:trento-server
  tasks:
    - name: Collect package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: Check if a specific package is installed
      ansible.builtin.set_fact:
        firewalld_installed: "{{ 'firewalld' in ansible_facts.packages }}"

    # This task is required because immediate: true does not work with offline
    # This should be fixed in newer ansible versions and could be removed in the future
    - name: Check the status of firewalld
      ansible.builtin.systemd:
        name: firewalld.service
      register: firewalld_status

- name: Provision postgres
  become: true
  vars:
    provision_postgres: "true"
  hosts: postgres-hosts
  roles:
    - role: postgres
      when: provision_postgres == 'true'
      become: true

- name: Provision prometheus
  become: true
  vars:
    provision_prometheus: "true"
  hosts: prometheus-hosts
  roles:
    - role: prometheus
      when: provision_prometheus == 'true'
      become: true

- name: Provision rabbitmq
  become: true
  vars:
    provision_rabbitmq: "true"
  hosts: rabbitmq-hosts
  roles:
    - role: rabbitmq
      when: provision_rabbitmq == 'true'

- name: Configure trento projects
  vars:
    provision_proxy: "true"
  hosts: trento-server
  become: true
  roles:
    - role: containers
      become: true
    - role: proxy
      when: provision_proxy == 'true'
      become: true

#- name: Configure trento-server with optional alerting
#  become: true
#  vars:
#      enable_alerting: "{{ lookup('env','enable_alerting') | default('false', true) | bool }}"
#      alert_sender: "{{ lookup('env','alert_sender') | default('', true) }}"
#      alert_recipient: "{{ lookup('env','alert_recipient') | default('', true) }}"
#      smtp_server: "{{ lookup('env','smtp_server') | default('', true) }}"
#      smtp_port: "{{ lookup('env','smtp_port') | default('', true) }}"
#      smtp_user: "{{ lookup('env','smtp_user') | default('', true) }}"
#      smtp_password: "{{ lookup('env','smtp_password') | default('', true) }}"
      

- name: Configure trento agents
  hosts: agents
  become: true
  roles:
    - role: agent
      become: true
